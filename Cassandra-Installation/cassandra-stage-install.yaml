--- # Installing Cassandra on Single Server = two variables: target and enviro. 'enviro' is the environment name to create Keyspaces.  
- hosts: '{{ target }}'
  remote_user: ubuntu
  become: yes
  become_method: sudo
  connection: ssh
  gather_facts: yes
  tasks:
  - name: Add Java Repo 
    shell: "add-apt-repository ppa:webupd8team/java -y"

  - name: Update all packages to the latest version
    shell: "apt-get -y update"

# Accept oracle license

  - name: Accepting Oracle license 1
    shell: "echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections"

  - name: Accepting Oracle License 2
    shell: "echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections"

  - name: Install Java8
    shell: "apt-get -y install oracle-java8-set-default"

# Install Cassandra

  - name: Add Cassandra Repository 
    shell: "echo 'deb http://debian.datastax.com/community stable main' | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list"

  - name: Add Secondary Cassandra Repository 
    shell: "echo 'deb-src http://www.apache.org/dist/cassandra/debian 22x main' | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list"

  - name: Add Keys
    shell: "wget http://debian.datastax.com/debian/repo_key"
  - name: Adding Keys
    shell: "apt-key add repo_key"

  - name: Add Additional Keys That Are Needed
    shell: "curl https://www.apache.org/dist/cassandra/KEYS | apt-key add -"

  - name: Update Packages One More Time
    shell: "apt-get -y update"
  - name: Install Cassandra
    shell: "apt-get -y install dsc22=2.2.3-1 cassandra=2.2.3"

# Required sleep command. This command is must in this playbook, otherwise, your cassandra installation will fail.

  - name: Wait two minutes
    shell: "sleep 120" 

# Configuring and editing Ansible config file. 

  - name: Editing listen_address value inside cassandra config
    shell: "sed -i '429s/localhost/''{{ target }}''/' /etc/cassandra/cassandra.yaml"
  - name: Editing /etc/init.d/cassandra
    shell: "sed -i 's/cassandra.+CassandraDaemon/cassandra/' /etc/init.d/cassandra"
  - name: Setting rpc_address value to 0.0.0.0
    shell: "sed -i '487s/localhost/0.0.0.0/' /etc/cassandra/cassandra.yaml"
  - name: Uncommenting broadcast_rpc_address
    shell: "sed -i '498s/^#//' /etc/cassandra/cassandra.yaml"
  - name: Adding IP address to broadcast_rpc_address
    shell: "sed -i '498s/1.2.3.4/''{{ target }}''/' /etc/cassandra/cassandra.yaml"
  - name: Remove whitespace in front of broadcast_rpc_address
    shell: "sed -i '498s/^ *//' /etc/cassandra/cassandra.yaml"

# This assumes that our two "cassandra" files (cassandra_one.cql and cassandra_two.cql) have
# certain queries that need to be run on Clustered servers. These first two modules are copying
# cassandra files from Bastion host (assuming files are under /home) to the first cassandra server where
# we will run the files from bash.

  - name: Copying cassandra_one.cql file to target server
    copy: src=/application_deploy/files/cassandra_one.cql dest=/home/

  - name: Copying over cassandra_two.cql file
    copy: src=/application_deploy/files/cassandra_two.cql dest=/home/

# Additional Time to Wait until proceeding further.

  - name: Wait 7 seconds and let the Ansible rest!
    shell: "sleep 7"

# Running cassandra_one.cql file with CQL commands 

  - name: Running cassandra_one.cql file with CQL commands
    shell: "cqlsh -f /home/cassandra_one.cql"

# Running cassandra_two.cql file with CQL commands

  - name: Running cassandra_two.cql file with CQL commands
    shell: "cqlsh -f /home/cassandra_two.cql"

# Sleep Time Before restart
  - name: Sleep for five seconds
    shell: "sleep 5"

  - name: Nodetool flush
    shell: "nodetool flush"

